--------------------------------------------------------------------------------
/*==============================================================*/
/*                          PROCEDURE                           */
/*==============================================================*/
--------------------------------------------------------------------------------
/*Nếu loại khách hàng là VIP thì khách hàng sẽ được giảm 10% tổng hóa đơn 
cần thanh toán. Nếu loại khách hàng là Loyal thì khách hàng sẽ được giảm 5% 
tổng hóa đơn cần thanh toán.*/
CREATE OR REPLACE PROCEDURE DisCount(IN_BILLID IN BILL.BILLID%TYPE)
AS

    v_customertype CUSTOMER.CUSTOMERTYPE%TYPE;
    V_CUSTOMERID BILL.CUSTOMERID%TYPE;
BEGIN
    SELECT BILL.CUSTOMERID INTO  V_CUSTOMERID
    FROM BILL
    WHERE BILL.BILLID=IN_BILLID;
    SELECT CUSTOMER.CUSTOMERTYPE INTO  v_customertype
    FROM CUSTOMER
    WHERE CUSTOMERID= V_CUSTOMERID;
    IF(v_customertype LIKE 'VIP') THEN
            UPDATE BILL
            SET BILL.TOTAL = BILL.TOTAL * 0.9
            WHERE BILL.BILLID=IN_BILLID;
    END IF;
    IF(v_customertype LIKE 'Thân thiết') THEN
            UPDATE BILL
            SET BILL.TOTAL = BILL.TOTAL * 0.95
            WHERE BILL.BILLID=IN_BILLID;
    END IF;
END;
/

--------------------------------------------------------------------------------

/* Thủ tục đặt lịch */

CREATE OR REPLACE PROCEDURE SP_ADDSCHEDULE(IN_BOOKID SCHEDULE.BOOKID%TYPE, IN_STAFFID SCHEDULE.STAFFID%TYPE,
IN_CUSTOMERID SCHEDULE.CUSTOMERID%TYPE,IN_SCHEDDATE SCHEDULE.SCHEDULEDATE%TYPE,
IN_STATUS SCHEDULE.STATUS%TYPE , IN_PAYMENTATUS SCHEDULE.PAYMENTSTATUS%TYPE, IN_NOTE SCHEDULE.NOTE%TYPE)
AS
    V_BOOKID SCHEDULE.BOOKID%TYPE;
    V_STAFFID STAFF.STAFFID%TYPE;
    V_CUSTOMERID CUSTOMER.CUSTOMERID%TYPE;
    V_LOI1 EXCEPTION;
BEGIN
    SELECT BOOKID INTO V_BOOKID
    FROM SCHEDULE 
    WHERE SCHEDULE.BOOKID=IN_BOOKID;
    SELECT STAFFID INTO  V_STAFFID
    FROM STAFF 
    WHERE STAFF.STAFFID=IN_STAFFID;
    SELECT CUSTOMERID INTO V_CUSTOMERID 
    FROM CUSTOMER
    WHERE CUSTOMER.CUSTOMERID=IN_CUSTOMERID;
  
    IF V_BOOKID IS NOT NULL THEN RAISE V_LOI1;
    END IF;
    EXCEPTION WHEN NO_DATA_FOUND THEN
        
        IF V_CUSTOMERID='' THEN DBMS_OUTPUT.PUT_LINE('MÃ KHÁCH HÀNG KHÔNG TỒN TẠI');
        ELSIF V_STAFFID='' THEN DBMS_OUTPUT.PUT_LINE('MÃ NHÂN VIÊN KHÔNG TỒN TẠI');
        ELSE
            INSERT INTO SCHEDULE VALUES (IN_BOOKID,IN_STAFFID,IN_CUSTOMERID,IN_SCHEDDATE,IN_STATUS,IN_PAYMENTATUS,IN_NOTE);
            DBMS_OUTPUT.PUT_LINE ('THÊM LỊCH TRÌNH THÀNH CÔNG');
        END IF;
    WHEN V_LOI1 THEN
          DBMS_OUTPUT.PUT_LINE ('MÃ ĐẶT SÂN ĐÃ TỒN TẠI');        
END;
/
--------------------------------------------------------------------------------
/* Thủ tục chi tiết đặt lịch */

CREATE OR REPLACE PROCEDURE SP_ADDSCHEDULEDETAILS(IN_BOOKID SCHEDULEDETAILS.BOOKID%TYPE, IN_BILLID SCHEDULEDETAILS.BILLID%TYPE,
IN_FIELDID SCHEDULEDETAILS.FIELDID%TYPE,IN_BEVERAGEID SCHEDULEDETAILS.BEVERAGEID%TYPE,IN_EQUIPMENTID SCHEDULEDETAILS.EQUIPMENTID%TYPE,
IN_BEV_QUANTIFIER SCHEDULEDETAILS.BEV_QUANTIFIER%TYPE ,IN_EQUIP_QUANTIFIER SCHEDULEDETAILS.EQUIP_QUANTIFIER%TYPE , 
IN_RENTINGTIME SCHEDULEDETAILS.RENTINGTIME%TYPE, IN_BOOKDATE SCHEDULEDETAILS.BOOKDATE%TYPE)
AS
    V_BOOKID SCHEDULE.BOOKID%TYPE;
    V_BILLID BILL.BILLID%TYPE;
    V_FIELDID FIELD.FIELDID%TYPE;
    V_BEVERAGEID BEVERAGE.BEVERAGEID%TYPE;
    V_EQUIPMENTID EQUIPMENT.EQUIPMENTID%TYPE;
    V_SCHEDULEDATE SCHEDULE.SCHEDULEDATE%TYPE;

BEGIN
    SELECT BOOKID INTO V_BOOKID
    FROM SCHEDULE 
    WHERE SCHEDULE.BOOKID=IN_BOOKID;

    SELECT BILLID INTO V_BILLID
    FROM BILL
    WHERE BILL.BILLID=IN_BILLID;  
    SELECT FIELDID INTO  V_FIELDID
    FROM FIELD
    WHERE FIELD.FIELDID=IN_FIELDID;
    IF IN_BEVERAGEID IS NOT NULL THEN
        SELECT BEVERAGEID INTO V_BEVERAGEID 
        FROM BEVERAGE
        WHERE BEVERAGE.BEVERAGEID=IN_BEVERAGEID;
    END IF;
    IF IN_EQUIPMENTID IS NOT NULL THEN
        SELECT EQUIPMENTID INTO V_EQUIPMENTID 
        FROM EQUIPMENT
        WHERE EQUIPMENT.EQUIPMENTID=IN_EQUIPMENTID;
    END IF;
    
    SELECT SCHEDULEDATE INTO V_SCHEDULEDATE
    FROM SCHEDULE
    WHERE SCHEDULE.BOOKID=IN_BOOKID;
        
        IF V_BOOKID='' THEN DBMS_OUTPUT.PUT_LINE('MÃ ĐẶT SÂN KHÔNG TỒN TẠI');
        ELSIF V_BILLID='' THEN DBMS_OUTPUT.PUT_LINE('MÃ HÓA ĐƠN KHÔNG TỒN TẠI');
        ELSIF V_BEVERAGEID='' THEN DBMS_OUTPUT.PUT_LINE('MÃ ĐỒ UỐNG KHÔNG TỒN TẠI');
        ELSIF V_EQUIPMENTID='' THEN DBMS_OUTPUT.PUT_LINE('MÃ DỤNG CỤ KHÔNG TỒN TẠI');
        ELSIF IN_BOOKDATE < V_SCHEDULEDATE THEN  DBMS_OUTPUT.PUT_LINE ('NGÀY ĐẶT SÂN PHẢI LỚN HƠN HOẶC BẰNG NGÀY ĐẶT LỊCH');    
        ELSE
            INSERT INTO SCHEDULEDETAILS VALUES (IN_BOOKID,IN_BILLID,IN_FIELDID,IN_BEVERAGEID,IN_EQUIPMENTID
            ,IN_BEV_QUANTIFIER,IN_EQUIP_QUANTIFIER,IN_RENTINGTIME,IN_BOOKDATE);
            DBMS_OUTPUT.PUT_LINE ('THÊM LỊCH TRÌNH THÀNH CÔNG');
        END IF;
          
END;
/
--------------------------------------------------------------------------------
/* Thêm dụng cụ */

CREATE OR REPLACE PROCEDURE SP_ADDEQUI(IN_EQUIID equipment.equipmentid%TYPE,
IN_EQUINAME equipment.equipmentname%TYPE, IN_REMAIN equipment.remain%TYPE,
IN_PRICE equipment.price%TYPE, IN_NOTE equipment.note%TYPE)
AS
    V_EQUIID equipment.equipmentid%TYPE;
    V_LOI EXCEPTION;
BEGIN
    SELECT equipmentid INTO V_EQUIID
    FROM EQUIPMENT
    WHERE equipment.equipmentid = IN_EQUIID;
    IF V_EQUIID IS NOT NULL THEN RAISE V_LOI;
    END IF; 
    EXCEPTION WHEN V_LOI THEN
       DBMS_OUTPUT.PUT_LINE ('DỤNG CỤ ĐÃ TỒN TẠI!');
    WHEN NO_DATA_FOUND THEN
        INSERT INTO  equipment  VALUES (IN_EQUIID,IN_EQUINAME,IN_REMAIN,IN_PRICE,IN_NOTE);
        DBMS_OUTPUT.PUT_LINE ('THÊM DỤNG CỤ THÀNH CÔNG!'); 
END;
/
--------------------------------------------------------------------------------

/*Thêm đồ uống*/

CREATE OR REPLACE PROCEDURE SP_ADDBEV (IN_BEVID beverage.beverageid%TYPE, 
IN_BEVNAME beverage.beveragename%TYPE, IN_REMAIN beverage.remain%TYPE, 
IN_PRICE beverage.price%TYPE,IN_NOTE beverage.note%TYPE)
AS
    V_BEVID beverage.beverageid%TYPE;
    V_LOI EXCEPTION;
BEGIN
    SELECT BEVERAGEID INTO V_BEVID
    FROM BEVERAGE
    WHERE beverage.beverageid=IN_BEVID;
    IF V_BEVID IS NOT NULL THEN RAISE V_LOI;
    END IF;
    EXCEPTION WHEN V_LOI THEN
        DBMS_OUTPUT.PUT_LINE ('ĐỒ UỐNG ĐÃ TỒN TẠI!');
    WHEN NO_DATA_FOUND THEN
        INSERT INTO beverage VALUES (IN_BEVID,IN_BEVNAME,IN_REMAIN,IN_PRICE,IN_NOTE);
        DBMS_OUTPUT.PUT_LINE ('THÊM ĐỒ UỐNG THÀNH CÔNG!');     
END;
/
--------------------------------------------------------------------------------
/*Thêm sân*/

CREATE OR REPLACE PROCEDURE SP_ADDFIELD(IN_FIELDID field.fieldid%TYPE,
IN_FIELDNAME field.fieldname%TYPE,IN_FIELDSIZE field.fieldsize%TYPE,
IN_FIELDPRICE field.fieldprice%TYPE, IN_FIELDSTUS field.status%TYPE,
IN_FIELDNOTE field.note%TYPE)
AS
    V_FIELDID field.fieldid%TYPE;
    V_LOI EXCEPTION;
BEGIN
    SELECT FIELDID INTO V_FIELDID
    FROM FIELD
    WHERE FIELD.fieldid=IN_FIELDID;
     IF V_FIELDID IS NOT NULL THEN RAISE V_LOI;
     END IF;
    EXCEPTION WHEN V_LOI THEN
        DBMS_OUTPUT.PUT_LINE ('MÃ SÂN ĐÃ TỒN TẠI!');
    WHEN NO_DATA_FOUND THEN
         INSERT INTO FIELD VALUES(IN_FIELDID,IN_FIELDNAME,IN_FIELDSIZE,IN_FIELDPRICE,IN_FIELDSTUS,IN_FIELDNOTE);
         DBMS_OUTPUT.PUT_LINE ('THÊM SÂN THÀNH CÔNG!');    
END;
/
--------------------------------------------------------------------------------

/* Liệt kê danh sách các khách hàng đặt sân trong các ngày */

CREATE OR REPLACE PROCEDURE SP_DSKHDAY(IN_BOOKDATE SCHEDULEDETAILS.BOOKDATE%TYPE )
AS
    CURSOR C_CUSID IS SELECT SCHEDULE.CUSTOMERID, CUSTOMER.CUSTOMERNAME 
    FROM SCHEDULE
    INNER JOIN SCHEDULEDETAILS ON SCHEDULE.BOOKID=SCHEDULEDETAILS.BOOKID 
    INNER JOIN CUSTOMER ON SCHEDULE.CUSTOMERID=CUSTOMER.CUSTOMERID
    WHERE SCHEDULEDETAILS.BOOKDATE=IN_BOOKDATE; 
    V_CUSID SCHEDULE.CUSTOMERID%TYPE;
    V_CUSNAME CUSTOMER.CUSTOMERNAME%TYPE;
    v_LOI EXCEPTION;
    
BEGIN
    OPEN C_CUSID;
    LOOP
        FETCH C_CUSID INTO  V_CUSID,V_CUSNAME;
        EXIT WHEN C_CUSID%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE('MÃ KHÁCH HÀNG: '||V_CUSID||' TÊN KHÁCH HÀNG: '||V_CUSNAME);
    END LOOP;
    CLOSE C_CUSID;
END;
/
--------------------------------------------------------------------------------

/* Cập nhật dụng cụ */

CREATE OR REPLACE PROCEDURE SP_UPDATEEQUI(IN_EQUIID equipment.equipmentid%TYPE,
IN_EQUINAME equipment.equipmentname%TYPE, IN_REMAIN equipment.remain%TYPE,
IN_PRICE equipment.price%TYPE, IN_NOTE equipment.note%TYPE)
AS
    V_EQUIID equipment.equipmentid%TYPE;
    V_LOI EXCEPTION;
BEGIN
    SELECT equipmentid INTO V_EQUIID
    FROM EQUIPMENT
    WHERE equipment.equipmentid = IN_EQUIID;
    IF V_EQUIID IS NULL THEN RAISE V_LOI;
    ELSE
        UPDATE EQUIPMENT
        SET EQUIPMENT.EQUIPMENTNAME=IN_EQUINAME, EQUIPMENT.REMAIN=IN_REMAIN,EQUIPMENT.PRICE=IN_PRICE,EQUIPMENT.NOTE=IN_NOTE
        WHERE EQUIPMENT.EQUIPMENTID=V_EQUIID;
        DBMS_OUTPUT.PUT_LINE ('CẬP NHẬT DỤNG CỤ THÀNH CÔNG!');
    END IF;
    EXCEPTION WHEN V_LOI THEN
       DBMS_OUTPUT.PUT_LINE ('KHÔNG TỒN TẠI MÃ DỤNG CỤ!');
END;
/
--------------------------------------------------------------------------------
/* Xóa dụng cụ */

CREATE OR REPLACE PROCEDURE SP_DELEQUI(IN_EQUIID equipment.equipmentid%TYPE)
AS
    V_EQUIID equipment.equipmentid%TYPE;
    V_LOI EXCEPTION;
BEGIN
    SELECT equipmentid INTO V_EQUIID
    FROM EQUIPMENT
    WHERE equipment.equipmentid = IN_EQUIID;
    IF V_EQUIID IS NULL THEN RAISE V_LOI;
    ELSE
        DELETE EQUIPMENT
        WHERE EQUIPMENT.EQUIPMENTID=V_EQUIID;
        DELETE SCHEDULEDETAILS
        WHERE SCHEDULEDETAILS.EQUIPMENTID=IN_EQUIID;
        DBMS_OUTPUT.PUT_LINE ('XÓA DỤNG CỤ THÀNH CÔNG!');
    END IF;
    EXCEPTION WHEN V_LOI THEN
        DBMS_OUTPUT.PUT_LINE ('KHÔNG TỒN TẠI MÃ DỤNG CỤ!');
END;
/
--------------------------------------------------------------------------------
/* Thêm tài khoản */

CREATE OR REPLACE PROCEDURE SP_ADDUSER(IN_USERNAME USER_ACCOUNT.USERNAME%TYPE, 
IN_USERPASS USER_ACCOUNT.USER_PASSWORD%TYPE,IN_USERROLE USER_ACCOUNT.USER_ROLE%TYPE)
AS
    V_USERNAME USER_ACCOUNT.USERNAME%TYPE;
    V_LOI EXCEPTION;
BEGIN
    SELECT USERNAME INTO V_USERNAME
    FROM USER_ACCOUNT
    WHERE USER_ACCOUNT.USERNAME=IN_USERNAME;
    IF V_USERNAME IS NOT NULL THEN RAISE V_LOI;
    END IF;
    EXCEPTION WHEN V_LOI THEN 
        DBMS_OUTPUT.PUT_LINE ('MÃ ĐĂNG NHẬP ĐÃ TỒN TẠI!');
    WHEN NO_DATA_FOUND THEN
        INSERT INTO USER_ACCOUNT VALUES (IN_USERNAME,IN_USERPASS,IN_USERROLE);
        DBMS_OUTPUT.PUT_LINE ('THÊM TÀI KHOẢN THÀNH CÔNG!'); 
END;
/
--------------------------------------------------------------------------------
/* Xóa tài khoản */

CREATE OR REPLACE PROCEDURE SP_DELEUSER(IN_USERNAME USER_ACCOUNT.USERNAME%TYPE)
AS
    V_USERNAME USER_ACCOUNT.USERNAME%TYPE;
    V_LOI EXCEPTION;
BEGIN
    SELECT USERNAME INTO V_USERNAME
    FROM USER_ACCOUNT
    WHERE USER_ACCOUNT.USERNAME= IN_USERNAME;
    IF V_USERNAME IS NULL THEN RAISE V_LOI;
    ELSE
        DELETE USER_ACCOUNT
        WHERE USER_ACCOUNT.USERNAME=IN_USERNAME;
        DELETE CUSTOMER
        WHERE CUSTOMER.CUSTOMERNAME=IN_USERNAME;
        DELETE STAFF
        WHERE STAFF.STAFFNAME=IN_USERNAME;
        DBMS_OUTPUT.PUT_LINE ('XÓA TÀI KHOẢN THÀNH CÔNG!');
    END IF;
    EXCEPTION WHEN V_LOI THEN
        DBMS_OUTPUT.PUT_LINE ('KHONG TON TAI USERNAME!');
END;
/
--------------------------------------------------------------------------------
/* Thêm khách hàng */

CREATE OR REPLACE PROCEDURE SP_ADDCUSTOMER(IN_ID CUSTOMER.CUSTOMERID%TYPE, IN_CUSUSERNAME CUSTOMER.CUS_USERNAME%TYPE,
IN_CUSNAME CUSTOMER.CUSTOMERNAME%TYPE,IN_CUSTEL CUSTOMER.CUSTOMERTEL%TYPE, IN_CUSADD CUSTOMER.CUSTOMERADD%TYPE, 
IN_BOOKTIME CUSTOMER.BOOKTIME%TYPE, IN_CUSTYPE CUSTOMER.CUSTOMERTYPE%TYPE ,IN_NOTE CUSTOMER.NOTE%TYPE)
AS 
    V_ID CUSTOMER.CUSTOMERID%TYPE;
    V_CUSUSERNAME CUSTOMER.CUS_USERNAME%TYPE;
    V_USERNAME USER_ACCOUNT.USERNAME%TYPE;
    V_USERROLE USER_ACCOUNT.USER_ROLE%TYPE;
    V_LOI EXCEPTION;
    V_LOI1 EXCEPTION;
    V_LOI2 EXCEPTION;
BEGIN
     SELECT USERNAME INTO V_USERNAME
     FROM USER_ACCOUNT
     WHERE USER_ACCOUNT.USERNAME=IN_CUSUSERNAME;
     SELECT USER_ROLE INTO V_USERROLE
     FROM USER_ACCOUNT
     WHERE USER_ACCOUNT.USERNAME=IN_CUSUSERNAME;     
     SELECT CUSTOMERID INTO V_ID
     FROM CUSTOMER
     WHERE CUSTOMER.CUSTOMERID=IN_ID ;
     SELECT  CUS_USERNAME INTO V_CUSUSERNAME
     FROM CUSTOMER
     WHERE CUSTOMER.CUS_USERNAME=IN_CUSUSERNAME;     
     IF V_CUSUSERNAME IS NOT NULL OR V_ID IS NOT NULL THEN RAISE V_LOI;
     END IF;

    EXCEPTION WHEN V_LOI THEN 
         DBMS_OUTPUT.PUT_LINE ('MÃ KHÁCH HÀNG HOẶC USERNAME ĐÃ TỒN TẠI!');
    WHEN NO_DATA_FOUND THEN
        IF V_USERNAME IS NULL THEN DBMS_OUTPUT.PUT_LINE('CHƯA TẠO USER CHO KHÁCH HÀNG NÀY');
        ELSIF V_USERROLE <> 'Khách Hàng' THEN  DBMS_OUTPUT.PUT_LINE('VAI TRÒ USER KHÔNG PHÙ HỢP!');
        ELSE 
         INSERT INTO CUSTOMER VALUES (IN_ID,IN_CUSUSERNAME,IN_CUSNAME,IN_CUSTEL,IN_CUSADD,IN_BOOKTIME,IN_CUSTYPE,IN_NOTE);
         DBMS_OUTPUT.PUT_LINE ('THÊM KHÁCH HÀNG THÀNH CÔNG!');
     END IF;
END;
/
--------------------------------------------------------------------------------
/* Thêm nhân viên */
CREATE OR REPLACE PROCEDURE SP_ADDSTAFF(IN_ID STAFF.STAFFID%TYPE, IN_STAFFUSERNAME STAFF.STAFF_USERNAME%TYPE, 
IN_MANAGERID STAFF.MANAGERID%TYPE,IN_STAFFNAME STAFF.STAFFNAME%TYPE,IN_STAFFTEL STAFF.STAFFTEL%TYPE, IN_STAFFADD STAFF.STAFFADD%TYPE, 
IN_STARTDATE STAFF.STARTDATE%TYPE, IN_POSITION STAFF.POSITION%TYPE ,IN_NOTE STAFF.NOTE%TYPE)
AS 
    V_ID STAFF.STAFFID%TYPE;
    V_STAFFUSERNAME STAFF.STAFF_USERNAME%TYPE;
    V_MANAGERID STAFF.MANAGERID%TYPE;
    V_USERNAME USER_ACCOUNT.USERNAME%TYPE;
    V_USERROLE USER_ACCOUNT.USER_ROLE%TYPE;
    V_LOI EXCEPTION;
    V_LOI1 EXCEPTION;
    V_LOI2 EXCEPTION;
    v_LOI3 EXCEPTION;
BEGIN
     SELECT USERNAME INTO V_USERNAME
     FROM USER_ACCOUNT
     WHERE USER_ACCOUNT.USERNAME=IN_STAFFUSERNAME;
     SELECT USER_ROLE INTO V_USERROLE
     FROM USER_ACCOUNT
     WHERE USER_ACCOUNT.USERNAME=IN_STAFFUSERNAME;     
     SELECT STAFFID INTO V_ID
     FROM STAFF
     WHERE STAFFID=IN_ID;
     SELECT  STAFF_USERNAME INTO V_STAFFUSERNAME
     FROM STAFF
     WHERE STAFF_USERNAME=IN_STAFFUSERNAME;  
     SELECT STAFFID INTO V_MANAGERID
     FROM STAFF 
     WHERE STAFFID=IN_MANAGERID AND POSITION='Quản lý'; 
     IF V_STAFFUSERNAME IS NOT NULL OR V_ID IS NOT NULL THEN RAISE V_LOI;
     END IF;
     EXCEPTION  WHEN V_LOI THEN 
         DBMS_OUTPUT.PUT_LINE ('MÃ NHÂN VIÊN HOẶC USERNAME ĐÃ TỒN TẠI!');
      WHEN NO_DATA_FOUND THEN
        IF V_USERNAME IS NULL THEN DBMS_OUTPUT.PUT_LINE('CHƯA TẠO USER CHO NHÂN VIÊN NÀY');
        ELSIF V_USERROLE = 'Khách Hàng' THEN DBMS_OUTPUT.PUT_LINE('VAI TRÒ USER KHÔNG PHÙ HỢP!');
        ELSIF V_MANAGERID = '' THEN DBMS_OUTPUT.PUT_LINE('MÃ QUẢN LÝ KHÔNG TỒN TẠI!');
        ELSE
            INSERT INTO STAFF VALUES (IN_ID,IN_STAFFUSERNAME,IN_MANAGERID,IN_STAFFNAME,IN_STAFFTEL,IN_STAFFADD,IN_STARTDATE,IN_POSITION,IN_NOTE);
            DBMS_OUTPUT.PUT_LINE ('THÊM NHÂN VIÊN THÀNH CÔNG!');
        end if;
            
END;
/
--------------------------------------------------------------------------------
/* Xóa đồ uống */
CREATE OR REPLACE PROCEDURE SP_DELBEV(IN_BEVID beverage.beverageid%TYPE)
AS
    V_BEVID beverage.beverageid%TYPE;
    V_LOI EXCEPTION;
BEGIN
    SELECT beverageid INTO V_BEVID
    FROM BEVERAGE
    WHERE beverage.beverageid = IN_BEVID;
    IF V_BEVID IS NULL THEN RAISE V_LOI;
    ELSE
        DELETE BEVERAGE
        WHERE BEVERAGE.BEVERAGEID=V_BEVID;
        DELETE SCHEDULEDETAILS
        WHERE SCHEDULEDETAILS.BEVERAGEID=IN_BEVID;
        DBMS_OUTPUT.PUT_LINE ('XÓA ĐỒ UỐNG THÀNH CÔNG!');
    END IF;
    EXCEPTION WHEN V_LOI THEN
        DBMS_OUTPUT.PUT_LINE ('KHÔNG TỒN TẠI MÃ ĐỒ UỐNG!');
END;
/
--------------------------------------------------------------------------------
/* Cập nhật đồ uống */
CREATE OR REPLACE PROCEDURE SP_UPDATEBEV(IN_BEVID beverage.beverageid%TYPE,
IN_BEVNAME beverage.beveragename%TYPE, IN_REMAIN beverage.remain%TYPE,
IN_PRICE beverage.price%TYPE, IN_NOTE beverage.note%TYPE)
AS
    V_BEVID beverage.beverageid%TYPE;
    V_LOI EXCEPTION;
BEGIN
    SELECT beverageid INTO V_BEVID
    FROM BEVERAGE
    WHERE beverage.beverageid = IN_BEVID;
    IF V_BEVID IS NULL THEN RAISE V_LOI;
    ELSE
        UPDATE BEVERAGE
        SET BEVERAGE.BEVERAGENAME=IN_BEVNAME, BEVERAGE.REMAIN=IN_REMAIN,BEVERAGE.PRICE=IN_PRICE,BEVERAGE.NOTE=IN_NOTE
        WHERE BEVERAGE.BEVERAGEID=V_BEVID;
        DBMS_OUTPUT.PUT_LINE ('CẬP NHẬT ĐỒ UỐNG THÀNH CÔNG!');
    END IF;
    EXCEPTION WHEN V_LOI THEN
       DBMS_OUTPUT.PUT_LINE ('KHÔNG TỒN TẠI MÃ ĐỒ UỐNG!');
END;
/
--------------------------------------------------------------------------------
/* Tính tổng cộng hóa đơn */

CREATE OR REPLACE  PROCEDURE SP_TinhHoaDon(IN_BILLID BILL.BILLID%TYPE)
AS
    V_BILLID NUMBER;
    V_TOTAL NUMBER;
    V_BOOKID SCHEDULEDETAILS.BOOKID%TYPE;
BEGIN
    SELECT COUNT(BILLID) INTO V_BILLID FROM SCHEDULEDETAILS WHERE BILLID=IN_BILLID;
    IF (V_BILLID>0) THEN
        
        DECLARE
            V_CHECKFIELDID NUMBER;
            V_CHECKBEVERAGEID NUMBER;
            V_CHECKEQUIPMENTID NUMBER;
        
        BEGIN
            SELECT DISTINCT BOOKID INTO V_BOOKID FROM SCHEDULEDETAILS WHERE BILLID=IN_BILLID;
            V_TOTAL:=0;
                SELECT COUNT(FIELDID) INTO V_CHECKFIELDID
                FROM SCHEDULEDETAILS 
                WHERE BILLID=IN_BILLID AND BOOKID=V_BOOKID;
                SELECT COUNT(BEVERAGEID) INTO V_CHECKBEVERAGEID
                FROM SCHEDULEDETAILS 
                WHERE BILLID=IN_BILLID AND BOOKID=V_BOOKID;
                SELECT COUNT(EQUIPMENTID) INTO V_CHECKEQUIPMENTID
                FROM SCHEDULEDETAILS 
                WHERE  BILLID=IN_BILLID AND BOOKID=V_BOOKID;
                IF(V_CHECKFIELDID>0) THEN
                DECLARE
                    CURSOR C1 IS SELECT FIELDID FROM SCHEDULEDETAILS WHERE BILLID=IN_BILLID AND BOOKID=V_BOOKID AND FIELDID IS NOT NULL;
                    V_FIELDID FIELD.FIELDID%TYPE;
                    V_RENTINGTIME SCHEDULEDETAILS.RENTINGTIME%TYPE;
                    V_FIELDPRICE FIELD.FIELDPRICE%TYPE;
                    BEGIN
                        OPEN C1;
                        LOOP
                            
                            FETCH C1 INTO V_FIELDID;
                            EXIT WHEN C1%NOTFOUND;
                            SELECT RENTINGTIME INTO V_RENTINGTIME
                            FROM SCHEDULEDETAILS
                            WHERE BILLID=IN_BILLID AND BOOKID=V_BOOKID AND FIELDID=V_FIELDID;
                            SELECT FIELDPRICE INTO V_FIELDPRICE
                            FROM FIELD
                            WHERE FIELDID=V_FIELDID;
                            V_TOTAL:=V_TOTAL+ (V_FIELDPRICE*(V_RENTINGTIME/60));                            
                        END LOOP;
                        CLOSE C1;
                    END;
                END IF;
                IF(V_CHECKBEVERAGEID>0) THEN
                DECLARE
                    CURSOR C2 IS SELECT BEVERAGEID FROM SCHEDULEDETAILS WHERE BILLID=IN_BILLID AND BOOKID=V_BOOKID AND BEVERAGEID IS NOT NULL;
                    V_BEVERAGEID SCHEDULEDETAILS.BEVERAGEID%TYPE;
                    V_BEV_QUANTIFIER SCHEDULEDETAILS.BEV_QUANTIFIER%TYPE;
                    V_PRICE BEVERAGE.PRICE%TYPE;
                BEGIN
                    OPEN C2;
                    LOOP
                        
                            FETCH C2 INTO V_BEVERAGEID;
                            EXIT WHEN C2%NOTFOUND;
                            SELECT BEV_QUANTIFIER INTO V_BEV_QUANTIFIER
                            FROM SCHEDULEDETAILS
                            WHERE BILLID=IN_BILLID AND BOOKID=V_BOOKID AND BEVERAGEID=V_BEVERAGEID;
                            SELECT PRICE INTO V_PRICE
                            FROM BEVERAGE
                            WHERE BEVERAGEID=V_BEVERAGEID;
                            V_TOTAL:= V_TOTAL+ ( V_PRICE*V_BEV_QUANTIFIER);
                    END LOOP;
                    CLOSE C2;
                END;
                END IF;
                IF(V_CHECKEQUIPMENTID>0) THEN
                DECLARE
                    CURSOR C3 IS SELECT EQUIPMENTID FROM SCHEDULEDETAILS WHERE BILLID=IN_BILLID AND BOOKID=V_BOOKID AND EQUIPMENTID IS NOT NULL;
                    V_EQUIPMENTID SCHEDULEDETAILS.EQUIPMENTID%TYPE;
                    V_EQUIP_QUANTIFIER SCHEDULEDETAILS.EQUIP_QUANTIFIER%TYPE;
                    V_PRICE1 EQUIPMENT.PRICE%TYPE;
                BEGIN
                    OPEN C3;
                    LOOP
                        
                            FETCH C3 INTO V_EQUIPMENTID;
                            EXIT WHEN C3%NOTFOUND;
                            SELECT EQUIP_QUANTIFIER INTO V_EQUIP_QUANTIFIER
                            FROM SCHEDULEDETAILS
                            WHERE BILLID=IN_BILLID AND BOOKID=V_BOOKID AND EQUIPMENTID=V_EQUIPMENTID ;
                            SELECT PRICE INTO V_PRICE1
                            FROM EQUIPMENT
                            WHERE EQUIPMENTID=V_EQUIPMENTID;
                            V_TOTAL:=V_TOTAL + (V_PRICE1*V_EQUIP_QUANTIFIER);
                    END LOOP;
                    CLOSE C3;
                END;
                END IF;
            UPDATE BILL
            SET TOTAL=V_TOTAL
            WHERE BILL.BILLID=IN_BILLID;
        END;
    END IF;
END;
/
/* Thủ tục thực thi tính hóa đơn */
CREATE OR REPLACE  PROCEDURE SP_ThucThiTinhHoaDon
AS
  CURSOR C1 IS SELECT BILLID FROM BILL;
  V_BILLID BILL.BILLID%TYPE;
BEGIN
    OPEN C1;
    LOOP
        FETCH C1 INTO V_BILLID;
        EXIT WHEN C1%NOTFOUND;
        IF C1%FOUND THEN
        SP_TinhHoaDon(V_BILLID);
        DisCount(V_BILLID);
        END IF;
    END LOOP;
    CLOSE C1;
END;
/
/* Thực thi thủ tục tính hóa đơn*/
EXECUTE SP_ThucThiTinhHoaDon;
